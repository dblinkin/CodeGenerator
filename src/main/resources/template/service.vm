// **********************************************************************"
// This file was generated by a code generator!"
// generator version 1.0.0.
// **********************************************************************

package $packageName

import ${packageName}.${struct.structName};
import com.qq.book.console.util.ConsoleDBUtil;
import com.qq.book.console.util.ReflectUtil;
import com.qq.bookutil.SearchUtil;
import com.qq.jutil.j4log.Logger;
import com.qq.jutil.util.Pair;
import console.db.DaoUtil;
import console.service.ConvertService;
import console.taf.BookConsoleInfoClient;
import console.util.Paging;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;

public class ${struct.structName}Service {

    private static final Logger logger = Logger.getLogger("action");

    public static SearchUtil.SearchRet queryByPage(ArrayList<ConsoleDBUtil.DB_Param> params, LinkedHashMap<String, String> orders,
            int curPage, int pageSize, String link) {

        Pair<ArrayList<${struct.structName}>, Integer> pair = ConsoleDBUtil.queryPageList(${struct.structName}.class, true, DaoUtil.getConsoleDB(),
             "${struct.dbName}", null, params, orders, curPage, pageSize);
        logger.info("${struct.structName}Service|queryByPage|total:" + pair.second + "|cur:" + pair.first.size());
        List<${struct.structName}> treasures = new ArrayList<${struct.structName}>(pair.first);
        SearchUtil su = new SearchUtil(treasures, new ConvertService(), new Paging(pair.second, curPage, pageSize, link));
        return su.search();
    }

    public static ${struct.structName} queryTreasure(int id) {
        ArrayList<ConsoleDBUtil.DB_Param> params = new ArrayList<ConsoleDBUtil.DB_Param>();
        params.add(new ConsoleDBUtil.DB_Param("id", "=", String.valueOf(id), "0"));
        return ConsoleDBUtil.getObj(${struct.structName}.class, true, DaoUtil.getConsoleDB(), "${struct.dbName}", null, params);
    }

    public static int add${struct.structName}(${struct.structName} ${struct.javaName}) {
        return ConsoleDBUtil.insert(DaoUtil.getConsoleDB(), ${struct.structName},
                new String[]{"id"});
    }

    public static int update${struct.structName}(${struct.structName} ${struct.javaName}) {
        return ConsoleDBUtil.update(DaoUtil.getConsoleDB(), ${struct.javaName},
                ReflectUtil.getAllFieldNames(${struct.structName}.class), new String[]{"id"});
    }

    public static int delete${struct.structName}(${struct.structName} ${struct.javaName}) {
        return ConsoleDBUtil.delete(DaoUtil.getConsoleDB(), ${struct.javaName}, new String[]{"id"});
    }
}